define(["jquery","core/notification","core/templates","core/ajax","tool_lp/dialogue","tool_lp/scalevalues"],function(n,l,o,e,a,t){function c(e,t,i){this.selectSelector=e,this.inputSelector=t,this.triggerSelector=i,this.originalscaleid=n(e).val(),n(e).on("change",this.scaleChangeHandler.bind(this)).change(),n(i).click(this.showConfig.bind(this))}return c.prototype.selectSelector=null,c.prototype.inputSelector=null,c.prototype.triggerSelector=null,c.prototype.scalevalues=null,c.prototype.originalscaleid=0,c.prototype.scaleid=0,c.prototype.popup=null,c.prototype.showConfig=function(){var t,i=this;this.scaleid=n(this.selectSelector).val(),this.scaleid<=0||(t=n(this.selectSelector).find("option:selected").text(),this.getScaleValues(this.scaleid).done(function(){var e={scalename:t,scales:i.scalevalues};o.render("tool_lp/scale_configuration_page",e).done(function(e){new a(t,e,i.initScaleConfig.bind(i))}).fail(l.exception)}).fail(l.exception))},c.prototype.retrieveOriginalScaleConfig=function(){var e=n(this.inputSelector).val();if(""!==e){e=n.parseJSON(e);if(e.shift().scaleid===this.originalscaleid)return e}return""},c.prototype.initScaleConfig=function(e){this.popup=e;var t,i=n(e.getContent());this.originalscaleid!==this.scaleid||""!==(t=this.retrieveOriginalScaleConfig())&&t.forEach(function(e){1===e.scaledefault&&i.find('[data-field="tool_lp_scale_default_'+e.id+'"]').attr("checked",!0),1===e.proficient&&i.find('[data-field="tool_lp_scale_proficient_'+e.id+'"]').attr("checked",!0)}),i.on("click",'[data-action="close"]',function(){this.setScaleConfig(),e.close()}.bind(this)),i.on("click",'[data-action="cancel"]',function(){e.close()})},c.prototype.setScaleConfig=function(){var l=n(this.popup.getContent()),o=[{scaleid:this.scaleid}],e=(this.scalevalues.forEach(function(e){var t=0,i=0;l.find('[data-field="tool_lp_scale_default_'+e.id+'"]').is(":checked")&&(t=1),l.find('[data-field="tool_lp_scale_proficient_'+e.id+'"]').is(":checked")&&(i=1),(t||i)&&o.push({id:e.id,scaledefault:t,proficient:i})}),JSON.stringify(o));n(this.inputSelector).val(e),this.originalscaleid=this.scaleid},c.prototype.getScaleValues=function(e){return t.get_values(e).then(function(e){return this.scalevalues=e}.bind(this))},c.prototype.scaleChangeHandler=function(e){n(e.target).val()<=0?n(this.triggerSelector).prop("disabled",!0):n(this.triggerSelector).prop("disabled",!1)},{init:function(e,t,i){return new c(e,t,i)}}});